<html>
  <head>
   <title>
    Mig´s Zippo und DIY Homepage
   </title>
   <link href="http://www.miglenium.de/favicon.ico" rel="shortcut icon"/>
   <meta content="Mig" name="author"/>
   <meta content="Mig" name="publisher"/>
   <meta content="Mig" name="copyright"/>
   <meta content="Mig´s Homepage über die Sammlung von Zippo Feuerzeugen und verschiedene DIY Projekte." name="description"/>
   <meta content="mig, m.i.g., mig´s, Zippo, Bradford, Niagara, Falls, Ontario, Kanada, Canada, limited, collectible, jahrgangsmodell, coty, seltene, alte, marine, naval, hifi, carhifi, pellets, pelletslager, eta, autoradio, e46, e36, golf, 4, summer, passat, kombiinstrument, do it yourself, diy," name="keywords"/>
   <meta content="Private Homepage" name="page-type"/>
   <meta content="Alle" name="audience"/>
   <meta content="de" http-equiv="content-language"/>
   <meta content="index, follow" name="robots"/>
   <meta content="Mig" name="DC.Creator"/>
   <meta content="Mig" name="DC.Publisher"/>
   <meta content="Mig" name="DC.Rights"/>
   <meta content="Mig´s Homepage über die Sammlung von Zippo Feuerzeugen und verschiedene DIY Projekte." name="DC.Description"/>
   <meta content="de" name="DC.Language"/>
   <style>
    <!--
 body { font-family:Arial; color:black; background-color:white; }
 h1 { font-family:Arial; font-size:12; color:rgb(22,22,22); }
 h2 { font-family:Arial; font-size:12; color:rgb(27,27,27); }
 p.namo-list { font-family:Arial; font-size:12; color:rgb(63,63,63); }
 p.namo-sublist { font-family:Arial; font-size:10; color:rgb(51,51,51); }
 table.namo-table { border-top-color:rgb(154,154,154); border-right-color:rgb(168,168,168); border-bottom-color:rgb(168,168,168); border-left-color:rgb(154,154,154); }
 table.namo-table td { border-top-color:rgb(168,168,168); border-right-color:rgb(154,154,154); border-bottom-color:rgb(154,154,154); border-left-color:rgb(168,168,168); }
 table.namo-table th { background-color:rgb(220,222,202); border-top-color:rgb(168,168,168); border-right-color:rgb(154,154,154); border-bottom-color:rgb(154,154,154); border-left-color:rgb(168,168,168); }
 span.namo-link, a:link { color:rgb(20,103,120); text-decoration:underline; }
 span.namo-visited, a:visited { color:rgb(88,107,139); }
 span.namo-active, a:active { color:rgb(0,124,196); }
 li.namo-list1 { list-style-image:url('nav/bullet1.gif'); }
 li.namo-list2 { list-style-image:url('nav/bullet2.gif'); }
 -->
   </style>
   <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
   <meta content="Theme\Vector\Arrow Blocks" name="namo-theme"/>
   <script language="JavaScript">
    <!--
 function na_change_img_src(name, nsdoc, rpath, preload)
 { 
   var img = eval((navigator.appName.indexOf('Netscape', 0) != -1) ? nsdoc+'.'+name : 'document.all.'+name);
   if (name == '')
     return;
   if (img) {
     img.altsrc = img.src;
     img.src    = rpath;
   } 
 }
 
 function na_restore_img_src(name, nsdoc)
 {
   var img = eval((navigator.appName.indexOf('Netscape', 0) != -1) ? nsdoc+'.'+name : 'document.all.'+name);
   if (name == '')
     return;
   if (img && img.altsrc) {
     img.src    = img.altsrc;
     img.altsrc = null;
   } 
 }
 
 // -->
   </script>
   <script language="JavaScript">
    <!--
 function nn_Menu(label) {
     // Menu 990702
     // by gary smith, July 1997
     // Copyright (c) 1997-1999 Netscape Communications Corp.
 
     this.version = "990702 [Menu; menu.js]";
     this.type = "Menu";
     this.fontSize = 12;
     this.fontWeight = "plain";
     this.fontFamily = "arial,helvetica,espy,sans-serif";
     this.fontColor = "#000000";
     this.fontColorHilite = "#ffffff";
     this.bgColor = "#555555"
     this.menuBorder = 1;
     this.menuItemBorder = 1;
     this.menuItemBgColor = "#cccccc";
     this.menuLiteBgColor = "#ffffff";
     this.menuBorderBgColor = "#777777";
     this.menuHiliteBgColor = "#000084";
     this.menuContainerBgColor = "#cccccc";
     this.childMenuIcon = "images/arrows.gif";
     this.childMenuIconHilite = "images/arrows2.gif";
     this.items = new Array();
     this.actions = new Array();
     this.colors = new Array();
     this.mouseovers = new Array();
     this.mouseouts = new Array();
     this.childMenus = new Array();
 
     this.addMenuItem = nn_addMenuItem;
     this.addMenuSeparator = nn_addMenuSeparator;
     this.writeMenus = nn_writeMenus;
     this.showMenu = nn_showMenu;
     this.onMenuItemOver = nn_onMenuItemOver;
     this.onMenuItemOut = nn_onMenuItemOut;
     // this.onMenuItemDown = nn_onMenuItemDown;
     this.onMenuItemAction = nn_onMenuItemAction;
     this.hideMenu = nn_hideMenu;
     this.hideChildMenu = nn_hideChildMenu;
     this.mouseTracker = nn_mouseTracker;
     this.setMouseTracker = nn_setMouseTracker;
 
     if (!window.menus) window.menus = new Array();
     this.label = label || "menuLabel" + window.menus.length;
     window.menus[this.label] = this;
     window.menus[window.menus.length] = this;
     if (!window.activeMenus) window.activeMenus = new Array();
     if (!window.menuContainers) window.menuContainers = new Array();
     /*if (!window.mDrag) {
         window.mDrag    = new Object();
         mDrag.startMenuDrag = nn_startMenuDrag;
         mDrag.doMenuDrag    = nn_doMenuDrag;
         this.setMouseTracker();
     }*/
     if (window.MenuAPI) MenuAPI(this);
 }
 
 function nn_addMenuItem(label, action, color, mouseover, mouseout) {
     this.items[this.items.length] = label;
     this.actions[this.actions.length] = action;
     this.colors[this.colors.length] = color;
     this.mouseovers[this.mouseovers.length] = mouseover;
     this.mouseouts[this.mouseouts.length] = mouseout;
 }
 
 function nn_addMenuSeparator() {
     this.items[this.items.length] = "separator";
     this.actions[this.actions.length] = "";
     this.menuItemBorder = 0;
 }
 
 function nn_writeMenus(container) {
   var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
   var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
   if (!container && is_ns4) {
     if (eval("document.width"))
       container = new Layer(1000);
   } else if (!container && is_ns6) {
     if (!document.getElementById("menuContainer")) 
       document.writeln('<SPAN ID="menuContainer"></SPAN>');
     container = document.getElementById("menuContainer");
   } else if (!container && document.all) {
     if (!document.all["menuContainer"]) 
       document.writeln('<SPAN ID="menuContainer"></SPAN>');
     container = document.all["menuContainer"];
   }
 
   if (!container && !window.delayWriteMenus) {
     window.delayWriteMenus = this.writeMenus;
     window.menuContainerBgColor = this.menuContainerBgColor;
     setTimeout('delayWriteMenus()', 3000);
     return;
   }
   container.isContainer = "menuContainer" + menuContainers.length;
   menuContainers[menuContainers.length] = container;
   container.menus = new Array();
   for (var i=0; i<window.menus.length; i++) 
     container.menus[i] = window.menus[i];
 
   window.menus.length = 0;
   var countMenus = 0;
   var countItems = 0;
   var top = 0;
   var content = '';
   var proto;
 
   for (var i=0; i<container.menus.length; i++, countMenus++) {
     var menu = container.menus[i];
     proto = menu.prototypeStyles || this.prototypeStyles || menu;
         content += ''+
         '<DIV ID="menuLayer'+ countMenus +'" STYLE="position:absolute;left:10;top:'+ (i * 100) +';visibility:hidden;">\n'+
         '  <DIV ID="menuLite'+ countMenus +'" STYLE="position:absolute;left:'+ proto.menuBorder +';top:'+ proto.menuBorder +';visibility:hide;" onMouseOut="nn_hideMenu(this);">\n'+
         '    <DIV ID="menuFg'+ countMenus +'" STYLE="position:absolute;left:1;top:1;visibility:hide;">\n'+
         '';
         var x=i;
 
         for (var i=0; i<menu.items.length; i++) {
             var item = menu.items[i];
             var childMenu = false;
             var defaultHeight = 20;
             var defaultIndent = 15;
             if (item.label) {
                 item = item.label;
                 childMenu = true;
             } else if (item.indexOf(".gif") != -1 && item.indexOf("<IMG") == -1) {
                 item = '<IMG SRC="' + item + '" NAME="menuItem'+ countItems +'Img">';
                 defaultIndent = 0;
                 if (is_ns4) {
                     defaultHeight = null;
                 }
             }
             proto.menuItemHeight = proto.menuItemHeight || defaultHeight;
             proto.menuItemIndent = proto.menuItemIndent || defaultIndent;
             var itemProps = 'visibility:hide;font-Family:' + proto.fontFamily +';font-Weight:' + proto.fontWeight + ';fontSize:' + proto.fontSize + ';';
             if (!is_ns4) 
                 itemProps += 'font-size:' + proto.fontSize + ';" onMouseOver="nn_onMenuItemOver(null,this);" onMouseOut="nn_onMenuItemOut(null,this);" onClick="nn_onMenuItemAction(null,this);';
             var dTag    = '<DIV ID="menuItem'+ countItems +'" STYLE="position:absolute;left:0;top:'+ (i * proto.menuItemHeight) +';'+ itemProps +'">';
             var dText   = '<DIV ID="menuItemText'+ countItems +'" STYLE="position:absolute;left:' + proto.menuItemIndent + ';top:2;color:'+ proto.fontColor +';">'+ item +'</DIV>\n<DIV ID="menuItemHilite'+ countItems +'" STYLE="position:absolute;left:' + proto.menuItemIndent + ';top:2;color:'+ proto.fontColorHilite +';visibility:hidden;">'+ item +'</DIV>';
             if (item == "separator") {
                 content += ( dTag + '<DIV ID="menuSeparator'+ countItems +'" STYLE="position:absolute;left:1;top:2;"></DIV>\n<DIV ID="menuSeparatorLite'+ countItems +'" STYLE="position:absolute;left:1;top:2;"></DIV>\n</DIV>');
             } else if (childMenu) {
                 content += ( dTag + dText + '<DIV ID="childMenu'+ countItems +'" STYLE="position:absolute;left:0;top:3;'+ itemProps +'"><IMG SRC="'+ proto.childMenuIcon +'"></DIV>\n</DIV>');
             } else {
                 content += ( dTag + dText + '</DIV>');
             }
             countItems++;
         }
 
         content += '      <DIV ID="focusItem'+ countMenus +'" STYLE="position:absolute;left:0;top:0;visibility:hide;" onClick="nn_onMenuItemAction(null,this);">&nbsp;</DIV>\n';
         content += '   </DIV>\n  </DIV>\n</DIV>\n';
         i=x;
     }
 
     if (!container) return;
     if (!is_ns4) {
         container.innerHTML=content;
     } else {
         container.document.open("text/html");
         container.document.writeln(content);
         container.document.close();
     }
     proto = null;
     if (is_ns4) {
 	    container.clip.width = window.innerWidth;
         container.clip.height = window.innerHeight;
         container.onmouseout = this.hideMenu;
         container.menuContainerBgColor = this.menuContainerBgColor;
         for (var i=0; i<container.document.layers.length; i++) {
             proto = container.menus[i].prototypeStyles || this.prototypeStyles || container.menus[i];
             var menu = container.document.layers[i];
             container.menus[i].menuLayer = menu;
             container.menus[i].menuLayer.Menu = container.menus[i];
             container.menus[i].menuLayer.Menu.container = container;
             var body = menu.document.layers[0].document.layers[0];
             body.clip.width = proto.menuWidth || body.clip.width;
             body.clip.height = proto.menuHeight || body.clip.height;
             for (var n=0; n<body.document.layers.length-1; n++) {
                 var l = body.document.layers[n];
                 l.Menu = container.menus[i];
                 l.menuHiliteBgColor = proto.menuHiliteBgColor;
                 l.document.bgColor = proto.menuItemBgColor;
                 l.saveColor = proto.menuItemBgColor;
                 l.mouseout  = l.Menu.mouseouts[n];
                 l.mouseover = l.Menu.mouseovers[n];
                 l.onmouseover = proto.onMenuItemOver;
                 l.onclick = proto.onMenuItemAction;
                 l.action = container.menus[i].actions[n];
                 l.focusItem = body.document.layers[body.document.layers.length-1];
                 l.clip.width = proto.menuItemWidth || body.clip.width + proto.menuItemIndent;
                 l.clip.height = proto.menuItemHeight || l.clip.height;
                 if (n>0) l.top = body.document.layers[n-1].top + body.document.layers[n-1].clip.height + proto.menuItemBorder;
                 l.hilite = l.document.layers[1];
                 l.document.layers[1].isHilite = true;
                 if (l.document.layers[0].id.indexOf("menuSeparator") != -1) {
                     l.hilite = null;
                     l.clip.height -= l.clip.height / 2;
                     l.document.layers[0].document.bgColor = proto.bgColor;
                     l.document.layers[0].clip.width = l.clip.width -2;
                     l.document.layers[0].clip.height = 1;
                     l.document.layers[1].document.bgColor = proto.menuLiteBgColor;
                     l.document.layers[1].clip.width = l.clip.width -2;
                     l.document.layers[1].clip.height = 1;
                     l.document.layers[1].top = l.document.layers[0].top + 1;
                 } else if (l.document.layers.length > 2) {
                     l.childMenu = container.menus[i].items[n].menuLayer;
                     l.icon = proto.childMenuIcon;
                     l.iconHilite = proto.childMenuIconHilite;
                     l.document.layers[2].left = l.clip.width -13;
                     l.document.layers[2].top = (l.clip.height / 2) -4;
                     l.document.layers[2].clip.left += 3;
                     l.Menu.childMenus[l.Menu.childMenus.length] = l.childMenu;
                 }
             }
             body.document.bgColor = proto.bgColor;
             body.clip.width  = l.clip.width +1;
             body.clip.height = l.top + l.clip.height +1;
             body.document.layers[n].clip.width = body.clip.width;
             body.document.layers[n].captureEvents(Event.MOUSEDOWN);
             // body.document.layers[n].onmousedown = proto.onMenuItemDown;
             // body.document.layers[n].onfocus = proto.onMenuItemDown;
             body.document.layers[n].onmouseout = proto.onMenuItemOut;
             body.document.layers[n].Menu = l.Menu;
             body.document.layers[n].top = -30;
             menu.document.bgColor = proto.menuBorderBgColor;
             menu.document.layers[0].document.bgColor = proto.menuLiteBgColor;
             menu.document.layers[0].clip.width = body.clip.width +1;
             menu.document.layers[0].clip.height = body.clip.height +1;
             menu.clip.width = body.clip.width + (proto.menuBorder * 2) +1;
             menu.clip.height = body.clip.height + (proto.menuBorder * 2) +1;
             if (menu.Menu.enableTracker) {
                 menu.Menu.disableHide = true;
                 nn_setMenuTracker(menu.Menu);
             }
         }
     } else if (is_ns6) {
         var menuCount = 0;
         container.onmouseout = this.hideMenu;
         for (var x=0; x<container.menus.length; x++) {
             var menu = document.getElementById("menuLayer" + x);
             container.menus[x].menuLayer = menu;
             container.menus[x].menuLayer.Menu = container.menus[x];
             container.menus[x].menuLayer.Menu.container = menu;
             proto = container.menus[x].prototypeStyles || this.prototypeStyles || container.menus[x];
             proto.menuItemWidth = proto.menuItemWidth || 200;
             menu.style.backgroundColor = proto.menuBorderBgColor;
             for (var i=0; i<container.menus[x].items.length; i++) {
                 var l = document.getElementById("menuItem" + menuCount);
                 l.Menu = container.menus[x];
                 proto = container.menus[x].prototypeStyles || this.prototypeStyles || container.menus[x];
                 l.style.width = proto.menuItemWidth;
                 l.style.height = proto.menuItemHeight;
                 if (i>0) l.style.top = parseInt(document.getElementById("menuItem" + (menuCount -1)).style.top) + parseInt(document.getElementById("menuItem" + (menuCount -1)).style.height) + proto.menuItemBorder;
                 l.style.fontSize = proto.fontSize;
                 l.style.backgroundColor = proto.menuItemBgColor;
                 l.style.visibility = "inherit";
                 l.saveColor = proto.menuItemBgColor;
                 l.menuHiliteBgColor = proto.menuHiliteBgColor;
                 l.action = container.menus[x].actions[i];
                 l.hilite = document.getElementById("menuItemHilite" + menuCount);
                 l.focusItem = document.getElementById("focusItem" + x);
                 l.focusItem.style.top = -30;
                 l.mouseover = l.Menu.mouseovers[x];
                 l.mouseout  = l.Menu.mouseouts[x];
                 var childItem = document.getElementById("childMenu" + menuCount);
                 if (childItem) {
                     l.childMenu = container.menus[x].items[i].menuLayer;
                     childItem.style.left = parseInt(l.style.width) -11;
                     childItem.style.top = (parseInt(l.style.height) /2) -4;
                     childItem.style.width = 30 || 7;
                     childItem.style.clip = "rect(0 7 7 3)";
                     l.Menu.childMenus[l.Menu.childMenus.length] = l.childMenu;
                 }
                 var sep = document.getElementById["menuSeparator" + menuCount];
                 if (sep) {
                     sep.style.clip = "rect(0 " + (proto.menuItemWidth - 3) + " 1 0)";
                     sep.style.backgroundColor = proto.bgColor;
                     sep = document.getElementById["menuSeparatorLite" + menuCount];
                     sep.style.clip = "rect(1 " + (proto.menuItemWidth - 3) + " 2 0)";
                     sep.style.backgroundColor = proto.menuLiteBgColor;
                     l.style.height = proto.menuItemHeight/2;
                     l.isSeparator = true
                 }
                 menuCount++;
             }
             proto.menuHeight = (parseInt(l.style.top) + parseInt(l.style.height));
             var lite = document.getElementById("menuLite" + x);
             lite.style.height = proto.menuHeight +2;
             lite.style.width = proto.menuItemWidth + 2;
             lite.style.backgroundColor = proto.menuLiteBgColor;
             var body = document.getElementById("menuFg" + x);
             body.style.height = proto.menuHeight + 1;
             body.style.width = proto.menuItemWidth + 1;
             body.style.backgroundColor = proto.bgColor;
             container.menus[x].menuLayer.style.width  = proto.menuWidth || proto.menuItemWidth + (proto.menuBorder * 2) +2;
             container.menus[x].menuLayer.style.height = proto.menuHeight + (proto.menuBorder * 2) +2;
             if (menu.Menu.enableTracker) {
                 menu.Menu.disableHide = true;
                 nn_setMenuTracker(menu.Menu);
             }
         }
         document.getElementById("menuContainer").style.backgroundColor = container.menus[0].menuContainerBgColor;
 //      container.document.saveBgColor = container.document.bgColor;
 	} else if (container.document.all) {
         var menuCount = 0;
         for (var x=0; x<container.menus.length; x++) {
             var menu = container.document.all("menuLayer" + x);
             container.menus[x].menuLayer = menu;
             container.menus[x].menuLayer.Menu = container.menus[x];
             container.menus[x].menuLayer.Menu.container = menu;
             proto = container.menus[x].prototypeStyles || this.prototypeStyles || container.menus[x];
             proto.menuItemWidth = proto.menuItemWidth || 200;
             menu.style.backgroundColor = proto.menuBorderBgColor;
             for (var i=0; i<container.menus[x].items.length; i++) {
                 var l = container.document.all["menuItem" + menuCount];
                 l.Menu = container.menus[x];
                 proto = container.menus[x].prototypeStyles || this.prototypeStyles || container.menus[x];
                 l.style.pixelWidth = proto.menuItemWidth;
                 l.style.pixelHeight = proto.menuItemHeight;
                 if (i>0) l.style.pixelTop = container.document.all["menuItem" + (menuCount -1)].style.pixelTop + container.document.all["menuItem" + (menuCount -1)].style.pixelHeight + proto.menuItemBorder;
                 l.style.fontSize = proto.fontSize;
                 l.style.backgroundColor = proto.menuItemBgColor;
                 l.style.visibility = "inherit";
                 l.saveColor = proto.menuItemBgColor;
                 l.menuHiliteBgColor = proto.menuHiliteBgColor;
                 l.action = container.menus[x].actions[i];
                 l.hilite = container.document.all["menuItemHilite" + menuCount];
                 l.focusItem = container.document.all["focusItem" + x];
                 l.focusItem.style.pixelTop = -30;
                 l.mouseover = l.Menu.mouseovers[x];
                 l.mouseout  = l.Menu.mouseouts[x];
                 var childItem = container.document.all["childMenu" + menuCount];
                 if (childItem) {
                     l.childMenu = container.menus[x].items[i].menuLayer;
                     childItem.style.pixelLeft = l.style.pixelWidth -11;
                     childItem.style.pixelTop = (l.style.pixelHeight /2) -4;
                     childItem.style.pixelWidth = 30 || 7;
                     childItem.style.clip = "rect(0 7 7 3)";
                     l.Menu.childMenus[l.Menu.childMenus.length] = l.childMenu;
                 }
                 var sep = container.document.all["menuSeparator" + menuCount];
                 if (sep) {
                     sep.style.clip = "rect(0 " + (proto.menuItemWidth - 3) + " 1 0)";
                     sep.style.backgroundColor = proto.bgColor;
                     sep = container.document.all["menuSeparatorLite" + menuCount];
                     sep.style.clip = "rect(1 " + (proto.menuItemWidth - 3) + " 2 0)";
                     sep.style.backgroundColor = proto.menuLiteBgColor;
                     l.style.pixelHeight = proto.menuItemHeight/2;
                     l.isSeparator = true
                 }
                 menuCount++;
             }
             proto.menuHeight = (l.style.pixelTop + l.style.pixelHeight);
             var lite = container.document.all["menuLite" + x];
             lite.style.pixelHeight = proto.menuHeight +2;
             lite.style.pixelWidth = proto.menuItemWidth + 2;
             lite.style.backgroundColor = proto.menuLiteBgColor;
             var body = container.document.all["menuFg" + x];
             body.style.pixelHeight = proto.menuHeight + 1;
             body.style.pixelWidth = proto.menuItemWidth + 1;
             body.style.backgroundColor = proto.bgColor;
             container.menus[x].menuLayer.style.pixelWidth  = proto.menuWidth || proto.menuItemWidth + (proto.menuBorder * 2) +2;
             container.menus[x].menuLayer.style.pixelHeight = proto.menuHeight + (proto.menuBorder * 2) +2;
             if (menu.Menu.enableTracker) {
                 menu.Menu.disableHide = true;
                 nn_setMenuTracker(menu.Menu);
             }
         }
         container.document.all("menuContainer").style.backgroundColor = container.menus[0].menuContainerBgColor;
         container.document.saveBgColor = container.document.bgColor;
     }
     window.wroteMenu = true;
 }
 
 function nn_onMenuItemOver(e, l, a) {
     var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
     var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
     l = l || this;
     a = a || window.ActiveMenuItem;
     if (is_ns4) {
         if (a) {
             a.document.bgColor = a.saveColor;
             if (a.hilite) a.hilite.visibility = "hidden";
             if (a.childMenu) a.document.layers[1].document.images[0].src = a.icon;
         } else {
             a = new Object();
         }
         if (this.mouseover && this.id != a.id) {
             if (this.mouseover.length > 4) {
                 var ext = this.mouseover.substring(this.mouseover.length-4);
                 if (ext == ".gif" || ext == ".jpg") {
                     this.document.layers[1].document.images[0].src = this.mouseover;
                 } else {
                     eval("" + this.mouseover);
                 }
             }
         }
         if (l.hilite) {
             l.document.bgColor = l.menuHiliteBgColor;
             l.zIndex = 1;
             l.hilite.visibility = "inherit";
             l.hilite.zIndex = 2;
             l.document.layers[1].zIndex = 1;
             l.focusItem.zIndex = this.zIndex +2;
         }
         l.focusItem.top = this.top;
         l.Menu.hideChildMenu(l);
     } else if (is_ns6) {
         // document.onmousedown=l.Menu.onMenuItemDown;
         if (a) {
             a.style.backgroundColor = a.saveColor;
             if (a.hilite) a.hilite.style.visibility = "hidden";
         } else {
             a = new Object();
 		}
         if (l.mouseover && l.id != a.id) {
             if (l.mouseover.length > 4) {
                 var ext = l.mouseover.substring(l.mouseover.length-4);
                 if (ext == ".gif" || ext == ".jpg") {
                     l.document.images[l.id + "Img"].src = l.mouseover;
                 } else {
                     eval("" + l.mouseover);
                 }
             }
         }
 		if (l.isSeparator) return;
         l.style.backgroundColor = l.menuHiliteBgColor;
         if (l.hilite) {
             l.style.backgroundColor = l.menuHiliteBgColor;
             l.hilite.style.visibility = "inherit";
         }
         l.focusItem.style.top = parseInt(l.style.pixelTop);
         l.focusItem.style.zIndex = l.zIndex +1;
         l.zIndex = 1;
         l.Menu.hideChildMenu(l);
     } else if (document.all && l.Menu) {
         // document.onmousedown=l.Menu.onMenuItemDown;
         if (a) {
             a.style.backgroundColor = a.saveColor;
             if (a.hilite) a.hilite.style.visibility = "hidden";
         } else {
             a = new Object();
 		}
         if (l.mouseover && l.id != a.id) {
             if (l.mouseover.length > 4) {
                 var ext = l.mouseover.substring(l.mouseover.length-4);
                 if (ext == ".gif" || ext == ".jpg") {
                     l.document.images[l.id + "Img"].src = l.mouseover;
                 } else {
                     eval("" + l.mouseover);
                 }
             }
         }
 		if (l.isSeparator) return;
         l.style.backgroundColor = l.menuHiliteBgColor;
         if (l.hilite) {
             l.style.backgroundColor = l.menuHiliteBgColor;
             l.hilite.style.visibility = "inherit";
         }
         l.focusItem.style.pixelTop = l.style.pixelTop;
         l.focusItem.style.zIndex = l.zIndex +1;
         l.zIndex = 1;
         l.Menu.hideChildMenu(l);
     }
     window.ActiveMenuItem = l;
     l.Menu.visited = true;
 }
 
 function nn_onMenuItemOut(e, l, a) {
     var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
     var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
     l = l || this;
 	a = a || window.ActiveMenuItem;
     if (l.id.indexOf("focusItem")) {
         if (a && l.top) {
             l.top = -30;
 			if (a.mouseout && a.id != l.id) {
 				if (a.mouseout.length > 4) {
 					var ext = a.mouseout.substring(a.mouseout.length-4);
 					if (ext == ".gif" || ext == ".jpg") {
 						a.document.layers[1].document.images[0].src = a.mouseout;
 					} else {
 						eval("" + a.mouseout);
 					}
 				}
 			}
         } else if (a && l.style) {
             document.onmousedown=null;
             window.event.cancelBubble=true;
 	        if (l.mouseout) {
 				if (l.mouseout.length > 4) {
 					var ext = l.mouseout.substring(l.mouseout.length-4);
 					if (ext == ".gif" || ext == ".jpg") {
 						l.document.images[l.id + "Img"].src = l.mouseout;
 					} else {
 						eval("" + l.mouseout);
 					}
 				}
 			}
         }
     }
 }
 
 function nn_onMenuItemAction(e, l) {
     l = window.ActiveMenuItem;
     if (!l) return;
     if (!ActiveMenu.Menu.disableHide) nn_hideActiveMenus(ActiveMenu.menuLayer);
     if (l.action) {
         eval("" + l.action);
     }
 }
 
 function nn_showMenu(menu, x, y, child) {
     if (!window.wroteMenu) return;
 
     var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
     var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
     
 	if (is_ns4) {
         if (menu) {
             var l = menu.menuLayer || menu;
             if (typeof(menu) == "string") {
                 for (var n=0; n < menuContainers.length; n++) {
                     l = menuContainers[n].menus[menu];
                     for (var i=0; i<menuContainers[n].menus.length; i++) {
                         if (menu == menuContainers[n].menus[i].label) l = menuContainers[n].menus[i].menuLayer;
                         if (l) break;
                     }
                 }
 				if (!l) return;
             }
             l.Menu.container.document.bgColor = null;
             l.left = 1;
             l.top = 1;
             nn_hideActiveMenus(l);
             if (this.visibility) l = this;
             window.ActiveMenu = l;
             window.releaseEvents(Event.MOUSEMOVE|Event.MOUSEUP);
             setTimeout('if(window.ActiveMenu)window.ActiveMenu.Menu.setMouseTracker();', 300);
         } else {
             var l = child;
         }
         if (!l) return;
         for (var i=0; i<l.layers.length; i++) {                
             if (!l.layers[i].isHilite) 
                 l.layers[i].visibility = "inherit";
             if (l.layers[i].document.layers.length > 0) 
                 nn_showMenu(null, "relative", "relative", l.layers[i]);
         }
         if (l.parentLayer) {
             if (x != "relative") 
                 l.parentLayer.left = x || window.pageX || 0;
             if (l.parentLayer.left + l.clip.width > window.innerWidth) 
                 l.parentLayer.left -= (l.parentLayer.left + l.clip.width - window.innerWidth);
             if (y != "relative") 
                 l.parentLayer.top = y || window.pageY || 0;
             if (l.parentLayer.isContainer) {
                 l.Menu.xOffset = window.pageXOffset;
                 l.Menu.yOffset = window.pageYOffset;
                 l.parentLayer.clip.width = window.ActiveMenu.clip.width +2;
                 l.parentLayer.clip.height = window.ActiveMenu.clip.height +2;
                 if (l.parentLayer.menuContainerBgColor) l.parentLayer.document.bgColor = l.parentLayer.menuContainerBgColor;
             }
         }
         l.visibility = "inherit";
         if (l.Menu) l.Menu.container.visibility = "inherit";
     } else if (is_ns6) {
         var l = menu.menuLayer || menu;
         nn_hideActiveMenus(l);
         if (typeof(menu) == "string") {
             l = document.getElementById(menu);
             for (var n=0; n < menuContainers.length; n++) {
                 l = menuContainers[n].menus[menu];
                 for (var i=0; i<menuContainers[n].menus.length; i++) {
                     if (menu == menuContainers[n].menus[i].label) l = menuContainers[n].menus[i].menuLayer;
                     if (l) break;
                 }
             }
         }
         window.ActiveMenu = l;
         l.style.visibility = "inherit";
 
         if (x != "relative") 
             l.style.left = x || window.pageX || 0;
         if (y != "relative") 
             l.style.top = y || window.pageY || 0;
 
         l.Menu.xOffset = document.body.scrollLeft;
         l.Menu.yOffset = document.body.scrollTop;
 	} else if (document.all) {
         var l = menu.menuLayer || menu;
         nn_hideActiveMenus(l);
         if (typeof(menu) == "string") {
             l = document.all[menu];
             for (var n=0; n < menuContainers.length; n++) {
                 l = menuContainers[n].menus[menu];
                 for (var i=0; i<menuContainers[n].menus.length; i++) {
                     if (menu == menuContainers[n].menus[i].label) l = menuContainers[n].menus[i].menuLayer;
                     if (l) break;
                 }
             }
         }
         window.ActiveMenu = l;
         l.style.visibility = "inherit";
         if (x != "relative") 
             l.style.pixelLeft = x || (window.pageX + document.body.scrollLeft) || 0;
         if (y != "relative") 
             l.style.pixelTop = y || (window.pageY + document.body.scrollTop) || 0;
         l.Menu.xOffset = document.body.scrollLeft;
         l.Menu.yOffset = document.body.scrollTop;
     }
     if (menu) {
         window.activeMenus[window.activeMenus.length] = l;
         l.Menu.visited = false;
     }
 }
 
 function nn_hideMenu(e) {
     var l = e || window.ActiveMenu;
     if (!l) return true;
 
     var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
     var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
     if (l.menuLayer) {
         l = l.menuLayer;
     } else if (this.visibility) {
         l = this;
     }
     if (l.menuLayer) {
         l = l.menuLayer;
     }
     var a = window.ActiveMenuItem;
     document.saveMousemove = document.onmousemove;
     document.onmousemove = nn_mouseTracker;
     if (a && is_ns4) {
         a.document.bgColor = a.saveColor;
         a.focusItem.top = -30;
         if (a.hilite) a.hilite.visibility = "hidden";
         if (a.childMenu) a.document.layers[1].document.images[0].src = a.icon;
         /*if (mDrag.oldX <= e.pageX+3 && mDrag.oldX >= e.pageX-3 && mDrag.oldY <= e.pageY+3 && mDrag.oldY >= e.pageY-3) {
             if (a.action && window.ActiveMenu) setTimeout('window.ActiveMenu.Menu.onMenuItemAction();', 2);
         } else if (document.saveMousemove == mDrag.doMenuDrag) {
             if (window.ActiveMenu) return true;
         }*/
     } else if (window.ActiveMenu && is_ns6) {
 	    // exception, check mouse pos and do not hide menu
 	    if (e && window.ActiveMenu) {
                  if (!e.clientX) return true;
 			var ex, ey;
 			ex = e.clientX + window.pageXOffset;
 			ey = e.clientY + window.pageYOffset;
 
 			for (var i=0; i < window.activeMenus.length; i++) {
 				if (!activeMenus[i]) return true;
 				l = activeMenus[i].Menu.container.style;
 
 				var l_left   = parseInt(l.left);
 				var l_top    = parseInt(l.top);
 				var l_width  = parseInt(l.width);
 				var l_height = parseInt(l.height);
 
 				if ((ex < l_left || l_left + l_width < ex ||
 					 ey < l_top  || l_top  + l_height < ey) && activeMenus[i].Menu.visited)
 					{
 					  if (activeMenus[i].visibility && activeMenus[i].Menu) {
 						activeMenus[i].visibility = "hidden";
 						activeMenus[i].Menu.container.visibility = "hidden";
 						activeMenus[i].Menu.container.clip.left = 0;
 					} else if (activeMenus[i].style) {
 						activeMenus[i].style.visibility = "hidden";
 		   			}
 				}
 			}
 			return true;
         }
         document.onmousedown=null;
         if (a) {
             a.style.backgroundColor = a.saveColor;
             if (a.hilite) a.hilite.style.visibility = "hidden";
         }
         // if (document.saveMousemove == mDrag.doMenuDrag) {
         //    return true;
         // }
 	} else if (window.ActiveMenu && (is_ns6 || document.all)) {
         document.onmousedown=null;
         if (a) {
             a.style.backgroundColor = a.saveColor;
             if (a.hilite) a.hilite.style.visibility = "hidden";
         }
         // if (document.saveMousemove == mDrag.doMenuDrag) {
         //    return true;
         // }
 	}
 
     if (window.ActiveMenu) {
         if (window.ActiveMenu.Menu) {
             if (window.ActiveMenu.Menu.disableHide) return true;
             e = window.event || e;
             if (!window.ActiveMenu.Menu.enableHideOnMouseOut && e.type == "mouseout") return true;
         }
     }
 
     nn_hideActiveMenus(l);
     return true;
 }
 
 function nn_hideChildMenu(menuLayer) {
     var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
     var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
     var l = menuLayer || this;
     for (var i=0; i < l.Menu.childMenus.length; i++) {
         if (is_ns4) {
             l.Menu.childMenus[i].visibility = "hidden";
         } else if (is_ns6 || document.all) {
             l.Menu.childMenus[i].style.visibility = "hidden";
         }
         l.Menu.childMenus[i].Menu.hideChildMenu(l.Menu.childMenus[i]);
     }
     if (l.childMenu) {
         if (is_ns4) {
             l.Menu.container.document.bgColor = null;
             l.Menu.showMenu(null,null,null,l.childMenu.layers[0]);
             l.childMenu.zIndex = l.parentLayer.zIndex +1;
             l.childMenu.top = l.top + l.parentLayer.top + l.Menu.menuLayer.top;
             if (l.childMenu.left + l.childMenu.clip.width > window.innerWidth) {
                 l.childMenu.left = l.parentLayer.left - l.childMenu.clip.width + l.Menu.menuLayer.top + 15;
                 l.Menu.container.clip.left -= l.childMenu.clip.width;
             } else if (l.Menu.childMenuDirection == "left") {
                 l.childMenu.left = l.parentLayer.left - l.parentLayer.clip.width;
                 l.Menu.container.clip.left -= l.childMenu.clip.width;
             } else {
                 l.childMenu.left = l.parentLayer.left + l.parentLayer.clip.width  + l.Menu.menuLayer.left -5;
             }
             l.Menu.container.clip.width += l.childMenu.clip.width +100;
             l.Menu.container.clip.height += l.childMenu.clip.height;
             l.document.layers[1].zIndex = 0;
             l.document.layers[1].document.images[0].src = l.iconHilite;
             l.childMenu.visibility = "inherit";
         } else if (is_ns6) {
             l.childMenu.style.zIndex = l.Menu.menuLayer.style.zIndex +1;
             l.childMenu.style.top = parseInt(l.style.top) + parseInt(l.Menu.menuLayer.style.top);
             if (parseInt(l.childMenu.style.left) + parseInt(l.childMenu.style.width) > parseInt(document.width)) {
                 l.childMenu.style.left = parseInt(l.childMenu.style.width) + parseInt(l.Menu.menuLayer.style.top) + 15;
             } else if (l.Menu.childMenuDirection == "left") {
                 // l.childMenu.style.pixelLeft = l.parentLayer.left - l.parentLayer.clip.width;
             } else {
                 l.childMenu.style.left = parseInt(l.Menu.menuLayer.style.width) + parseInt(l.Menu.menuLayer.style.left)-5;
             }
             l.childMenu.style.visibility = "inherit";
 		} else if (document.all) {
             l.childMenu.style.zIndex = l.Menu.menuLayer.style.zIndex +1;
             l.childMenu.style.pixelTop = l.style.pixelTop + l.Menu.menuLayer.style.pixelTop;
             if (l.childMenu.style.pixelLeft + l.childMenu.style.pixelWidth > document.width) {
                 l.childMenu.style.pixelLeft = l.childMenu.style.pixelWidth + l.Menu.menuLayer.style.pixelTop + 15;
             } else if (l.Menu.childMenuDirection == "left") {
                 // l.childMenu.style.pixelLeft = l.parentLayer.left - l.parentLayer.clip.width;
             } else {
                 l.childMenu.style.pixelLeft = l.Menu.menuLayer.style.pixelWidth + l.Menu.menuLayer.style.pixelLeft -5;
             }
             l.childMenu.style.visibility = "inherit";
         }
         if (!l.childMenu.disableHide) 
             window.activeMenus[window.activeMenus.length] = l.childMenu;
     }
 }
 
 function nn_hideActiveMenus(l) {
     if (!window.activeMenus) return;
     for (var i=0; i < window.activeMenus.length; i++) {
     if (!activeMenus[i]) return;
         if (activeMenus[i].visibility && activeMenus[i].Menu) {
             activeMenus[i].visibility = "hidden";
             activeMenus[i].Menu.container.visibility = "hidden";
             activeMenus[i].Menu.container.clip.left = 0;
         } else if (activeMenus[i].style) {
             activeMenus[i].style.visibility = "hidden";
         }
     }
     document.onmousemove = nn_mouseTracker;
     window.activeMenus.length = 0;
 }
 
 function nn_hs_onmenuout()
 {
     if (!document.all) return;
 
     e = window.event;
     if (!e) return;
 
     if (!window.activeMenus) return;
 
     var ex, ey;
     ex = e.clientX + document.body.scrollLeft;
     ey = e.clientY + document.body.scrollTop;
 
     for (var i=0; i < window.activeMenus.length; i++) {
         if (!activeMenus[i]) return;
 
         l = activeMenus[i].Menu.container.style;
 
 	if ((ex < l.pixelLeft || l.pixelLeft+l.pixelWidth < ex ||
 	     ey < l.pixelTop  || l.pixelTop+l.pixelHeight < ey) && activeMenus[i].Menu.visited)
         {
           if (activeMenus[i].visibility && activeMenus[i].Menu) {
             activeMenus[i].visibility = "hidden";
             activeMenus[i].Menu.container.visibility = "hidden";
             activeMenus[i].Menu.container.clip.left = 0;
           } else if (activeMenus[i].style) {
             activeMenus[i].style.visibility = "hidden";
           }
         }
     }
 }
 
 function nn_hs_hidemenu(element) 
 {
     if (!document.all) return;
     e = window.event;
 
     var ex, ey;
     ex = e.clientX + document.body.scrollLeft;
     ey = e.clientY + document.body.scrollTop;
 
     for (var i=0; i < window.activeMenus.length; i++) {
         if (!activeMenus[i]) return;
 
         l = activeMenus[i].Menu.container.style;
 
 	if (ex < l.pixelLeft || l.pixelLeft+l.pixelWidth < ex ||
 	    ey < l.pixelTop  || l.pixelTop+l.pixelHeight < ey)
         {
           if (activeMenus[i].visibility && activeMenus[i].Menu) {
             activeMenus[i].visibility = "hidden";
             activeMenus[i].Menu.container.visibility = "hidden";
             activeMenus[i].Menu.container.clip.left = 0;
             nn_hideActiveMenus();
           } else if (activeMenus[i].style) {
             activeMenus[i].style.visibility = "hidden";
 
           }
         }
     }
 }
 
 function nn_mouseTracker(e) {
     e = e || window.Event || window.event;
     window.pageX = e.pageX || e.clientX;
     window.pageY = e.pageY || e.clientY;
 
     nn_hs_onmenuout();
 }
 
 function nn_setMouseTracker() {
     if (document.captureEvents) {
         document.captureEvents(Event.MOUSEMOVE|Event.MOUSEUP);
     }
     document.onmousemove = this.mouseTracker;
     document.onmouseup = this.hideMenu;
 }
 
 function nn_setMenuTracker(menu) {
     if (!window.menuTrackers) window.menuTrackers = new Array();
     menuTrackers[menuTrackers.length] = menu;
     window.menuTrackerID = setInterval('menuTracker()',10);
 }
 
 function nn_menuTracker() {
     for (var i=0; i < menuTrackers.length; i++) {
         if (!isNaN(menuTrackers[i].xOffset) && document.layers) {
             var off = parseInt((menuTrackers[i].xOffset - window.pageXOffset) / 10);
             if (isNaN(off)) off = 0;
             if (off < 0) {
                 menuTrackers[i].container.left += -off;
                 menuTrackers[i].xOffset += -off;
             } else if (off > 0) {
                 menuTrackers[i].container.left += -off;
                 menuTrackers[i].xOffset += -off;
             }
         }
         if (!isNaN(menuTrackers[i].yOffset) && document.layers) {
             var off = parseInt((menuTrackers[i].yOffset - window.pageYOffset) / 10);
             if (isNaN(off)) off = 0;
             if (off < 0) {
                 menuTrackers[i].container.top += -off;
                 menuTrackers[i].yOffset += -off;
             } else if (off > 0) {
                 menuTrackers[i].container.top += -off;
                 menuTrackers[i].yOffset += -off;
             }
         }
         if (!isNaN(menuTrackers[i].xOffset) && document.body) {
             var off = parseInt((menuTrackers[i].xOffset - document.body.scrollLeft) / 10);
             if (isNaN(off)) off = 0;
             if (off < 0) {
                 menuTrackers[i].menuLayer.style.pixelLeft += -off;
                 menuTrackers[i].xOffset += -off;
             } else if (off > 0) {
                 menuTrackers[i].menuLayer.style.pixelLeft += -off;
                 menuTrackers[i].xOffset += -off;
             }
         }
         if (!isNaN(menuTrackers[i].yOffset) && document.body) {
             var off = parseInt((menuTrackers[i].yOffset - document.body.scrollTop) / 10);
             if (isNaN(off)) off = 0;
             if (off < 0) {
                 menuTrackers[i].menuLayer.style.pixelTop += -off;
                 menuTrackers[i].yOffset += -off;
             } else if (off > 0) {
                 menuTrackers[i].menuLayer.style.pixelTop += -off;
                 menuTrackers[i].yOffset += -off;
             }
         }
     }
 }
 
 // Close drag event.
 /*
 function nn_onMenuItemDown(e, l) {
     l = l || window.ActiveMenuItem || this;
     if (!l.Menu) {
     } else {
         if (document.layers) {
             mDrag.dragLayer = l.Menu.container;
             mDrag.startMenuDrag(e);
         } else {
             mDrag.dragLayer = l.Menu.container.style;
             mDrag.startMenuDrag(e);
             window.event.cancelBubble=true;
         }
     }
 }
 
 function nn_startMenuDrag(e) {
     if (document.layers) {
         if (e.which > 1) {
             if (window.ActiveMenu) ActiveMenu.Menu.container.visibility = "hidden";
             window.ActiveMenu = null;
             return true;
         }
         document.captureEvents(Event.MOUSEMOVE);
         var x = e.pageX;
         var y = e.pageY;
     } else {
         var x = window.event.clientX;
         var y = window.event.clientY;
     }
     mDrag.offX = x;
     mDrag.offY = y;
     mDrag.oldX = x;
     mDrag.oldY = y;
     if (!ActiveMenu.Menu.disableDrag) document.onmousemove = mDrag.doMenuDrag;
     return false;
 }
 
 function nn_doMenuDrag(e) {
     if (document.layers) {
         mDrag.dragLayer.moveBy(e.pageX-mDrag.offX,e.pageY-mDrag.offY);
         mDrag.offX = e.pageX;
         mDrag.offY = e.pageY;
     } else {
         mDrag.dragLayer.pixelLeft = window.event.offsetX;
         mDrag.dragLayer.pixelTop  = window.event.offsetY;
         return false; //for IE
     }
 }
 
 // End of close
 */
 
 function nn_menu_left(element, anchor_name, hor) 
 {
   var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
   var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
   var x = 0;
   if (is_ns4) {
     if (hor) {
       x = element.x;
     } else {
       var anchor = document.anchors[anchor_name];
       if (anchor)
         x = anchor.x;
     }
   } else if (is_ns6 || document.all) {
     x = element.offsetLeft;
     for (el = element.offsetParent; el; el = el.offsetParent)
       x += el.offsetLeft;
     if (hor == false)
       x += element.offsetWidth;
   }
   return x-4;
 }
 
 function nn_menu_top(element, height, hor) 
 {
   var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
   var is_ns6 = navigator.appName.indexOf('Netscape', 0) != -1 && document.getElementById;
 
   var y = 0;
   if (is_ns4) {
     y = element.y;
     if (hor)
       y += height;
   } else if (is_ns6 || document.all) {
     y = element.offsetTop;
     for (el = element.offsetParent; el; el = el.offsetParent)
       y += el.offsetTop;
     if (hor)
       y += element.offsetHeight;
   }
   return y-4;
 }
 
 function nn_init_menu()
 {
   if (document.layers) nn_load_menu();
 }
 function nn_load_menu()
 {
   document.navmenu1 = new nn_Menu();
 
   document.navmenu1.addMenuItem("Über mich", "self.location='profile.html'");
   document.navmenu1.addMenuItem("Zippo", "self.location='zippo.html'");
   document.navmenu1.addMenuItem("DIY", "self.location='diy.html'");
 
   document.navmenu1.fontFamily = 'Arial';
   document.navmenu1.fontSize = 10;
   document.navmenu1.fontColor = "black";
   document.navmenu1.fontColorHilite = "white";
   document.navmenu1.menuItemBgColor = "#CCCCCC";
   document.navmenu1.menuHiliteBgColor = "#000084";
   document.navmenu1.menuBorderBgColor = "#777777";
   document.navmenu1.menuLiteBgColor = "white";
   document.navmenu1.bgColor = "#555555";
   document.navmenu1.menuBorder = 1;
   document.navmenu1.menuItemWidth = 120;
   document.navmenu1.menuItemHeight = 20;
 
   document.navmenu3 = new nn_Menu();
 
   document.navmenu3.addMenuItem("Jahrgangszippo", "self.location='zippo-jahrgang.html'");
   document.navmenu3.addMenuItem("Canada Jahrgang", "self.location='zippo-jahrgang-canada.html'");
   document.navmenu3.addMenuItem("C.o.t.y.", "self.location='zippo-coty.html'");
   document.navmenu3.addMenuItem("Limited Edition", "self.location='zippo-limited-edition.html'");
   document.navmenu3.addMenuItem("Silver Plate", "self.location='zippo-silver-plate.html'");
   document.navmenu3.addMenuItem("Raritäten", "self.location='zippo-raritaeten.html'");
   document.navmenu3.addMenuItem("Marine / Naval", "self.location='zippo-marine.html'");
   document.navmenu3.addMenuItem("Alte / Sonstige", "self.location='zippo-alte.html'");
   document.navmenu3.addMenuItem("Zubehör / Pins", "self.location='zippo-zubehoer.html'");
   document.navmenu3.addMenuItem("Zippo Sound", "self.location='zippo-sound.html'");
   document.navmenu3.addMenuItem("Datierung", "self.location='zippo-datierung.html'");
 
   document.navmenu3.fontFamily = 'Arial';
   document.navmenu3.fontSize = 10;
   document.navmenu3.fontColor = "black";
   document.navmenu3.fontColorHilite = "white";
   document.navmenu3.menuItemBgColor = "#CCCCCC";
   document.navmenu3.menuHiliteBgColor = "#000084";
   document.navmenu3.menuBorderBgColor = "#777777";
   document.navmenu3.menuLiteBgColor = "white";
   document.navmenu3.bgColor = "#555555";
   document.navmenu3.menuBorder = 1;
   document.navmenu3.menuItemWidth = 120;
   document.navmenu3.menuItemHeight = 20;
 
   document.navmenu4 = new nn_Menu();
 
   document.navmenu4.addMenuItem("Pelletslager", "self.location='diy-pelletslager.html'");
   document.navmenu4.addMenuItem("Golf IV Summer", "self.location='diy-golf-4.html'");
   document.navmenu4.addMenuItem("Passat 35i KI", "self.location='diy-passat-35i.html'");
   document.navmenu4.addMenuItem("BMW E46 HiFi", "self.location='diy-bmw-e46.html'");
   document.navmenu4.addMenuItem("BMW E36 HiFi", "self.location='diy-bmw-e36.html'");
   document.navmenu4.addMenuItem("Ford Escort HiFi", "self.location='diy-ford-escort.html'");
   document.navmenu4.addMenuItem("Subwoofer VAS", "self.location='diy-subwoofer.html'");
 
   document.navmenu4.fontFamily = 'Arial';
   document.navmenu4.fontSize = 10;
   document.navmenu4.fontColor = "black";
   document.navmenu4.fontColorHilite = "white";
   document.navmenu4.menuItemBgColor = "#CCCCCC";
   document.navmenu4.menuHiliteBgColor = "#000084";
   document.navmenu4.menuBorderBgColor = "#777777";
   document.navmenu4.menuLiteBgColor = "white";
   document.navmenu4.bgColor = "#555555";
   document.navmenu4.menuBorder = 1;
   document.navmenu4.menuItemWidth = 120;
   document.navmenu4.menuItemHeight = 20;
 
   document.navmenu1.writeMenus();
 }
 //-->
   </script>
  </head>
  <body background="images/nth_theme_vector_arrow_blocks_bg.gif" onload="nn_init_menu();">
   <div align="left">
    <table align="center" border="0" width="750">
     <tr>
      <td width="744">
       <p align="center">
        <img border="0" height="67" src="nav/www-miglenium-de.jpg" width="566"/>
       </p>
      </td>
     </tr>
     <tr>
      <td width="744">
       <p>
        <font size="2">
        </font>
       </p>
      </td>
     </tr>
     <tr>
      <td width="744">
       <!--NAMO_NAVBAR_START T H C h m   -1 15 61 5 6 12 -->
       <div align="center">
        <a href="javascript:void(0)" onmouseout="nn_hs_hidemenu(this)" onmouseover="nn_showMenu(document.navmenu1, nn_menu_left(this, 'anchor_menu1', true), nn_menu_top(this, 24, true))">
         <img align="texttop" alt="Home" border="0" class="namo-hibutton2" name="nav_index_TH0" src="nav/nav_15_index_btn_homeh.gif"/>
        </a>
        <a href="profile.html" onmouseout="na_restore_img_src('nav_index_TH1', 'document');" onmouseover="na_change_img_src('nav_index_TH1', 'document', 'nav/nav_15_profile_thr.gif', true);" target="_self">
         <img align="texttop" alt="Über mich" border="0" class="namo-button2" name="nav_index_TH1" src="nav/nav_15_profile_th.gif"/>
        </a>
        <a href="zippo.html" onmouseout="na_restore_img_src('nav_index_TH2', 'document');nn_hs_hidemenu(this)" onmouseover="na_change_img_src('nav_index_TH2', 'document', 'nav/nav_15_zippo_thr.gif', true);nn_showMenu(document.navmenu3, nn_menu_left(this, 'anchor_menu1', true), nn_menu_top(this, 24, true))" target="_self">
         <img align="texttop" alt="Zippo" border="0" class="namo-button2" name="nav_index_TH2" src="nav/nav_15_zippo_th.gif"/>
        </a>
        <a href="diy.html" onmouseout="na_restore_img_src('nav_index_TH3', 'document');nn_hs_hidemenu(this)" onmouseover="na_change_img_src('nav_index_TH3', 'document', 'nav/nav_15_diy_thr.gif', true);nn_showMenu(document.navmenu4, nn_menu_left(this, 'anchor_menu1', true), nn_menu_top(this, 24, true))" target="_self">
         <img align="texttop" alt="DIY" border="0" class="namo-button2" name="nav_index_TH3" src="nav/nav_15_diy_th.gif"/>
        </a>
       </div>
       <!--NAMO_NAVBAR_END-->
      </td>
     </tr>
    </table>
    <table align="center" border="0" width="750">
     <tr>
      <td width="744">
       <p align="center">
       </p>
       <table align="center" border="0" cellpadding="0" cellspacing="0" width="450">
        <tr>
         <td colspan="3" height="50" valign="top" width="450">
          <p align="center">
           <b>
            <span style="font-size:10pt;">
             Sie sind der   Besucher Nr.
            </span>
           </b>
           <span style="font-size:10pt;">
            <b>
             <img align="absmiddle" border="0" lowsrc="http://miglenium.de/" src="http://webcounter.goweb.de/60787.GIF" vspace="0"/>
             auf  Mig`s Homepage
            </b>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <td colspan="3" height="69" valign="top" width="675">
          <p align="center">
           <span style="font-size:10pt;">
            erstellt am
            <b>
             09.09.1999
            </b>
           </span>
           <span style="font-size:10pt;">
            zuletzt 
                 aktualisiert am
            <font color="#003993">
            </font>
            <b>
             <font color="#003993">
              01.1.2018
             </font>
            </b>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <td valign="top" width="225">
         </td>
         <td width="225">
          <p align="center">
           <img border="0" height="199" src="pictures/zippo-logo/wasseralfingen-logo-farbe.jpg" width="186"/>
          </p>
         </td>
         <td width="225">
         </td>
        </tr>
       </table>
       <p align="center">
       </p>
       <p align="center">
       </p>
       <p align="center">
       </p>
      </td>
     </tr>
    </table>
    <table align="center" border="0" width="750">
     <tr>
      <td align="center" valign="top" width="744">
       <p>
       </p>
       <hr/>
       <!--NAMO_NAVBAR_START C h C h     -1 15 61 17 6 11 -->
       <div align="center">
        [Home][
        <a href="profile.html" onmouseout="" onmouseover="" target="org_nth_theme_business_classic_cement_ntc_banner.tng">
         Über mich
        </a>
        ][
        <a href="zippo.html" onmouseout="" onmouseover="" target="org_nth_theme_business_classic_cement_ntc_banner.tng">
         Zippo
        </a>
        ][
        <a href="diy.html" onmouseout="" onmouseover="" target="org_nth_theme_business_classic_cement_ntc_banner.tng">
         DIY
        </a>
        ]
       </div>
       <!--NAMO_NAVBAR_END-->
       <hr size="1" width="450"/>
       <!--NAMO_SHARED_CONTENTS_START name="NamoCopy" time="5ae56280,1d38014"-->
       <p>
        <font size="2">
         Copyright (c) 2018 Alle Rechte vorbehalten.
        </font>
       </p>
       <!--NAMO_SHARED_CONTENTS_END-->
       <!--NAMO_SHARED_CONTENTS_START name="NamoEMail" time="5ae56280,1d38014"-->
       <p>
        <font size="2">
         <a href="mailto:info@miglenium.de">
          info@miglenium.de
         </a>
        </font>
       </p>
       <!--NAMO_SHARED_CONTENTS_END-->
      </td>
     </tr>
    </table>
   </div>
   <p>
   </p>
   <script namo_navmenu="">
    <!--
 var is_ns4 = navigator.appName.indexOf('Netscape', 0) != -1 && !document.getElementById;
 if (!is_ns4) nn_load_menu();
 //-->
   </script>
  </body>
 </html>
