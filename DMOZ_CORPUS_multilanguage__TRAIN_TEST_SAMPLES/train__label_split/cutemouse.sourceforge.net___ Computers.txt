<!DOCTYPE html>
 <html lang="en">
  <head>
   <title>
    CuteMouse
   </title>
   <meta charset="utf-8"/>
   <meta content="width=device-width" name="viewport"/>
   <style>
    a {
 	color: #369;
 	text-decoration: underline;
 }
 a:hover {
 	color: #00f;
 }
 code {
 	font-family: sans-serif;
 	font-weight: bold;
 }
 img {
 	vertical-align: middle;
 }
 li {
 	margin-bottom: .5em;
 }
 body {
 	font-family: sans-serif;
 	margin: 0;
 }
 	header {
 	}
 		header > h1 {
 			background-color: #036;
 			margin: 0;
 			text-align: center;
 		}
 		header > nav {
 			background-color: #eee;
 			border-bottom: 1px solid #ccc;
 			padding: 1em .5em;
 			text-align: center;
 		}
 			header > nav h3 {
 				background-color: #036;
 				color: #fff;
 				font-size: 1em;
 			}
 	main {
 		margin: 0 auto;
 		padding: 1em;
 		max-width: 1000px;
 	}
 		main > section {
 		}
 			main > section h2 {
 				border-bottom: 1px solid #036;
 				color: #036;
 			}
 		main > article {
 			border-top: 1px solid #ccc;
 			margin-top: 2em;
 			padding-top: 2em;
 		}
 			main > article h3 {
 				background-color: #eee;
 				font-size: 1em;
 			}
 			main > article p.download {
 				font-weight: bold;
 				margin: 3em 0;
 			}
 				main > article p.download a {
 					background-color: #369;
 					border-bottom: .5em solid #036;
 					color: #fff;
 					padding: 1em 2em;
 					text-decoration: none;
 				}
 				main > article p.download a:hover {
 					background-color: #036;
 				}
 	footer {
 		background-color: #eee;
 		border-top: .5em solid #ccc;
 		text-align: center;
 	}
 		footer img {
 			border: 1px solid #fff;;
 		}
 		footer a {
 			text-decoration: none;
 		}
   </style>
  </head>
  <body>
   <header>
    <h1>
     <img alt="CuteMouse logo" src="http://cutemouse.sourceforge.net/images/cutemouse.svg.png"/>
     <img alt="CuteMouse mascot" src="http://cutemouse.sourceforge.net/graphix/cutemouse.svg.png"/>
    </h1>
    <nav>
     <h3>
      Links
     </h3>
     <p>
      <a href="https://sourceforge.net/projects/cutemouse/">
       CuteMouse project info (SF)
      </a>
     </p>
     <p>
      <a href="http://www.freedos.org/">
       FreeDOS website
      </a>
     </p>
    </nav>
   </header>
   <main>
    <section>
     <h2>
      About CuteMouse
     </h2>
     <p>
      CuteMouse is a DOS based, open source mouse driver, which supports many protocols of serial and PS/2 mice. It can search for a serial mouse at all COM ports or only at a specified port. An important CuteMouse feature is its small memory footprint: the resident part (TSR) occupies less than 3.5kb. CuteMouse can also install itself in upper memory, when available, without requiring external utilities such as the LH (LoadHigh) command. Modern BIOSes often make USB mice visible through the PS/2 interface if you enable "legacy" support in BIOS setup.
     </p>
     <p>
      CuteMouse has three branches now:
     </p>
     <ol>
      <li>
       V1.9 branch uses BIOS to handle PS/2 mice.
      </li>
      <li>
       V2.0 branch uses direct hardware access for PS/2 mice, and supports the wheel.
      </li>
      <li>
       V2.1 branch uses BIOS to handle PS/2 mice but also supports the wheel, combining the best of V1.9 and V2.0. Wheel programming info is included in the v2.x packages.
      </li>
     </ol>
     <p>
      RAR and ZIP commands used to generate the CuteMouse packages:
      <code>
       rar a -m5 -r -s -tl x.rar *
      </code>
      and
      <code>
       zip -r9 -o x.zip *
      </code>
     </p>
    </section>
    <article>
     <h3>
      The latest beta version in the 2.1 branch is v2.1 beta 4.
     </h3>
     <p class="download">
      Download:
      <a href="http://cutemouse.sourceforge.net/download/cutemouse21b4.zip">
       ZIP
      </a>
      <a href="http://cutemouse.sourceforge.net/download/cutemouse21b4.rar">
       RAR
      </a>
     </p>
     <p>
      New in v2.1 beta 4 since v2.0 alpha 4, changes by Eric Auer:
     </p>
     <p>
      v2.1 beta 3 - v2.1 beta 4 (July 2008)
     </p>
     <ul>
      <li>
       added debug binary, prints PS/2 debugging output during mouse init and when mouse is activated / stopped later
      </li>
      <li>
       Dell Inspiron 1501 touchpad has no int 15.c204 ident in BIOS, so we use PS/2 even without ident (as ctmouse 1.9)
      </li>
      <li>
       option /O changed from disable to enable wheel detection (only few DOS apps use wheels, and wheel is less compatible)
      </li>
      <li>
       option /M (disable old MouseSystems / Genius) is now the default, so there is a new option /Y to enable MouseSystems.
      </li>
      <li>
       lots of changes in the source code to let it compile with the MASM-ized JWASM of Japheth.de (based on OpenWatcom WASM) instead of the commercial TASM. Disabled many macros.
      </li>
      <li>
       this version comes with TASM and JWASMD binaries so you can compare them: ctmouse binaries are byte identical with the exception of protocol.com where I had to fix a bug.
      </li>
     </ul>
     <p>
      v2.1 beta 2 - v2.1 beta 3 (June 2007)
     </p>
     <ul>
      <li>
       new mousetst binary with sources written in NASM Assembly language. Supports wheel testing, so removed wheeltst. The old BC3.1 mousetst was very un-portable to another C. Updated makefile mousetst section. New mousetst is 1kB.
      </li>
      <li>
       directory structure changed to something more elaborate, with bin/, doc/ctmouse/ and source/ctmouse/ with subdirectories. This also allows easy installation in FreeDOS, just unzip.
      </li>
      <li>
       dropped packed / unpacked distinction, but feel free to aPack binaries yourself (upx somehow refuses to compress ctmouse?).
      </li>
     </ul>
     <p>
      v2.1 beta 1 - v2.1 beta 2
     </p>
     <ul>
      <li>
       new /O option to suppress wheel detection: Might improve PnP for serial mice, but main use is for PS/2. USB BIOS support usually does not support the "enable wheel protocol" handshake, and if you hotplug a mouse (NOT recommended for PS/2), it will boot in non-wheel mode. The TSR cannot detect and fix that mode change.
      </li>
      <li>
       made E_needvga message translateable. The message tells that this CuteMouse version does not support non-VGA plain EGA hardware.
      </li>
      <li>
       improved the English help message
      </li>
     </ul>
     <p>
      v2.1 beta 1
     </p>
     <ul>
      <li>
       removed RIL interface: non-RIL apps caused graphics corruption
      </li>
      <li>
       reading VGA registers: no RIL needed but VGA hardware needed
      </li>
      <li>
       backup/restore VGA registers in copysprite
      </li>
      <li>
       replaced hardware PS/2 by BIOS PS/2 handling again for better compatibility, based on public domain source fragment by Konstantin Koll
      </li>
      <li>
       removed PS/2 IRQ handler by BIOS callback handler. Wheel data protocol processing again based on code from Konstantin Koll.
      </li>
      <li>
       removed "XMS UMB" allocate / free: only DOS UMB worked anyway
      </li>
      <li>
       do not disablePS2 right before enablePS2 (IRQ/settings)
      </li>
      <li>
       store only CRTC port (3d4/3b4), not full videoregs structure
      </li>
      <li>
       explicitly set "blit mode" for EGA/VGA (not for CGA/MCGA)
      </li>
      <li>
       introduce a handfull nop to mark interesting places in the code
      </li>
      <li>
       enabledriver_20 explicitly sets int10 handler to CS:.
      </li>
      <li>
       show error message if pre-VGA, old version only tuned videoregs if EGA
      </li>
     </ul>
    </article>
    <article>
     <h3>
      The latest alpha version in the 2.0 branch is v2.0 alpha 4.
     </h3>
     <p class="download">
      Download:
      <a href="http://cutemouse.sourceforge.net/download/cutemouse20a4.zip">
       ZIP
      </a>
      <a href="http://cutemouse.sourceforge.net/download/cutemouse20a4.rar">
       RAR
      </a>
     </p>
     <p>
      New in v2.0 alpha 4 since v1.9.1, changes by Nagy Daniel, Jason Burgon and Arkady Belousov:
     </p>
     <ul>
      <li>
       Hardware PS/2 handling reintroduced
      </li>
      <li>
       Added new wheel API
      </li>
      <li>
       Added wheel tester utility
      </li>
      <li>
       Implemented INT 33/0028; the DX argument is ignored
      </li>
      <li>
       Reimplemented functions INT 33/001A and 001B to mimic MS Mouse behavior
      </li>
      <li>
       Changed semantics of the /R command line option: its arguments multiplied by 10 and passed to 001A function
      </li>
      <li>
       Cleaned and optimized source code and fixed many bugs
      </li>
     </ul>
    </article>
    <article>
     <h3>
      The latest version in the 1.9 branch is v1.9.1.
     </h3>
     <p class="download">
      Download:
      <a href="http://cutemouse.sourceforge.net/download/cutemouse191.zip">
       ZIP
      </a>
      <a href="http://cutemouse.sourceforge.net/download/cutemouse191.rar">
       RAR
      </a>
     </p>
     <p>
      New in v1.9.1 since v1.8, changes by Arkady Belousov, Maurizio Spagni, Donald Davis, Jason Burgon and Nagy Daniel:
     </p>
     <ul>
      <li>
       Fixed bug in INT 33/0017; under Turbo Pascal IDE this bug caused crash in some cases. (1.9.1)
      </li>
      <li>
       INT 33/0005 and 0006 functions now return zero values in case of wrong button number in BX; this makes game Patrician happy. (1.9.1)
      </li>
      <li>
       Heavy source cleaning and optimization
      </li>
      <li>
       INT 33/001A and 001B functions are temporarily disabled because their descriptions in RBIL 61 don't correspond with MS Mouse behavior and this causes cursor slowdown in some applications (for example, SimCity 2000)
      </li>
      <li>
       For /Sn/P option combination INT 33/0024 now returns proper IRQ#
      </li>
      <li>
       INT 33/001F function now retains DTR and RTS UART lines active
      </li>
      <li>
       Removed flushing mouse data stream when detecting mouse type (this also prevents infinite loops in some cases under Windows)
      </li>
      <li>
       Small mouse movements are now doubled also in auto resolution mode
      </li>
      <li>
       Cursor redrawing routines now recall themselves if interrupt handlers try to call them while drawing routines work; this should avoid differences between seen and real cursor status in some rare cases
      </li>
      <li>
       LCR and MCR now preserved in UARTs for which no mouse is detected
      </li>
      <li>
       Added additional check for PS/2 device presence (this prevents big delay at startup in some cases under Windows)
      </li>
      <li>
       Added support for 286 and 386 CPUs
      </li>
      <li>
       Added external assembler library
      </li>
      <li>
       Added Dutch, French, Latvian, Polish, Slovak and Spanish message files
      </li>
      <li>
       Added /N command line option to force load CuteMouse as new TSR
      </li>
      <li>
       COMTEST utility improved (and may be used to integrate IRQ auto detection into CuteMouse)
      </li>
      <li>
       Added closing for all local file handles before exit (this prevents leakage from system handles pool when CTMOUSE is called with redirected output and stays TSR)
      </li>
      <li>
       INT 33/0024 and 006D now report driver version 7.05 instead of 6.26
      </li>
      <li>
       Implemented function INT 33/0031
      </li>
      <li>
       CTMOUSE now handles INT 10/4F02 and some INT 10/11 video functions and correctly recalculates screen size when, for example, the screen is switched to 43/50 lines text mode
      </li>
     </ul>
    </article>
   </main>
   <footer>
    <a href="http://sourceforge.net/">
     <img alt="Hosted by SourceForge (button)" src="http://sourceforge.net/sflogo.php?group_id=40123"/>
    </a>
   </footer>
  </body>
 </html>
