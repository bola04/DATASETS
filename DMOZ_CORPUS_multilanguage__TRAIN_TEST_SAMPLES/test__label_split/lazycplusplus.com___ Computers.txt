<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
 <html>
  <head>
   <title>
    Lazy C++
   </title>
   <link href="lzz.css" rel="stylesheet" type="text/css"/>
   <meta content="a c++ component generator" name="description"/>
   <meta content="c++ tool, lazy c++, lazycplusplus, c++ component, fuzzy parser, fuzzy c++ parser, c++ code generator, preparser, c++ preparser, header generator, header file generator" name="keywords"/>
  </head>
  <body>
   <div class="menu">
    <p align="right">
     <em>
      Home
     </em>
     <br/>
     <a href="http://www.lazycplusplus.com/doc.html">
      Documentation
     </a>
     <br/>
     <a href="http://www.lazycplusplus.com/download.html">
      Download
     </a>
     <br/>
    </p>
   </div>
   <h1 align="left">
    Lzz: The Lazy C++ Programmer's Tool
   </h1>
   <p style="color: maroon;">
    Version 3 now on
    <a href="https://github.com/mjspncr/lzz3">
     GitHub
    </a>
    !
   </p>
   <p style="color: maroon;">
    See
    <a href="history.html">
     here
    </a>
    for past release notes.
   </p>
   <p>
    Lzz is a tool that automates many onerous C++ programming tasks.  It
 can save you a lot of time and make coding more enjoyable.  Given a
 sequence of declarations Lzz will generate your header and source
 files.  For example, given the following code:
   </p>
   <blockquote>
    <pre>// A.lzz
 class A
 {
 public:
   inline void f (int i) { ... }
   void g (int j = 0) { ... }
 };
 bool operator == (A const &amp; a1, A const &amp; a2) { ... }</pre>
   </blockquote>
   Lzz will generate a header file:
   <blockquote>
    <pre>// A.h
 #ifndef LZZ_A_h
 #define LZZ_A_h
 class A
 {
 public:
   void f (int i);
   void g (int j = 0);
 };
 inline void A::f (int i) { ... }
 bool operator == (A const &amp; a1, A const &amp; a2);
 #endif</pre>
   </blockquote>
   And a source file:
   <blockquote>
    <pre>// A.cpp
 #include "A.h"
 void A::g (int j) { ... }
 bool operator == (A const &amp; a1, A const &amp; a2) { ... }</pre>
   </blockquote>
   Lzz makes ordinary C++ programming seem low-level.  How many times
 have you neglected to update a header file after editing a source
 file? This is a silly mistake, yet we do it again and again.  C++
 forces you to type and maintain duplicate code.  Why not let a
 program generate it for you?
   <p>
    The parser in Lzz is generated by
    <a href="basil/">
     Basil
    </a>
    , a
 backtracking LR(1) parser generator.
   </p>
   <p>
    Lzz was developed and is actively maintained by Mike Spencer
 (
    <a href="mailto:mike@lazycplusplus.com">
     mike@lazycplusplus.com
    </a>
    ).
   </p>
  </body>
 </html>
