<html>
  <head>
   <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
   <meta content="Adobe GoLive 5" name="generator"/>
   <title>
    Bobtail Bobtailwelpen und Bearded Collie Welpen / Dream of Paradise
   </title>
   <style media="screen" type="text/css">
    <!--
 #Ebene2                   { position: absolute; z-index: 1; top: 437px; left: 360px; width: 120px; height: 30px; visibility: visible }
 #Ebene33 { position: absolute; z-index: -1; top: 266px; left: 184px; width: 203px; height: 117px; visibility: hidden }
 #Ebene5            { position: absolute; top: 214px; left: 234px; width: 360px; height: 294px; visibility: visible }
 #Ebene1  { position: absolute; top: 12px; left: 144px; width: 572px; height: 78px; visibility: visible }
 #Ebene3 { position: absolute; top: 15px; left: 17px; width: 98px; height: 32px; visibility: visible }
 #Ebene4  { position: absolute; top: 614px; left: 386px; width: 66px; height: 24px; visibility: visible }
 #Ebene6 { position: absolute; top: 117px; left: 278px; width: 253px; height: 90px; visibility: visible }
 -->
   </style>
   <meta content="Thomas Drayss" name="author"/>
   <meta content="Beate Drayss" name="publisher"/>
   <meta content="T.Drayss 17.03.99" name="copyright"/>
   <meta content="Bobtailzucht, Bobtailwelpen, Bobtaillinks, Bobtail, Old English Sheepdog, OES, Bearded Collie, Hunde, Hundezucht, Welpen, VDH, FCI, Zwinger, Hunderassen" name="keywords"/>
   <meta content="Bobtail Welpen vom VDH Züchter Bearded Collie Welpen vom VDH Züchter Bobtail und Bearded Collie Hobbyzucht,Beratung,  Rasseinfo,Pflege,Vorstellung unserer Hunde, Angeschlossen an VDH und FCI.Für alle Hundeinteressierten und Welpenkäufer . " name="description"/>
   <meta content="Alle" name="audience"/>
   <meta content="NEVER" name="expires"/>
   <meta content="Persönliche Homepage" name="page-type"/>
   <meta content="INDEX,FOLLOW" name="robots"/>
   <csscriptdict>
    <script>
     <!--
 CSInit = new Array;
 function CSScriptInit() {
 if(typeof(skipPage) != "undefined") { if(skipPage) return; }
 idxArray = new Array;
 for(var i=0;i<CSInit.length;i++)
 	idxArray[i] = i;
 CSAction2(CSInit, idxArray);}
 CSAg = window.navigator.userAgent; CSBVers = parseInt(CSAg.charAt(CSAg.indexOf("/")+1),10);
 function IsIE() { return CSAg.indexOf("MSIE") > 0;}
 function CSIEStyl(s) { return document.all.tags("div")[s].style; }
 function CSNSStyl(s) { return CSFindElement(s,0); }
 function CSFindElement(n,ly) { if (CSBVers < 4) return document[n];
 	var curDoc = ly ? ly.document : document; var elem = curDoc[n];
 	if (!elem) { for (var i=0;i<curDoc.layers.length;i++) {
 		elem = CSFindElement(n,curDoc.layers[i]); if (elem) return elem; }}
 	return elem;
 }
 
 function CSClickReturn () {
 	var bAgent = window.navigator.userAgent; 
 	var bAppName = window.navigator.appName;
 	if ((bAppName.indexOf("Explorer") >= 0) && (bAgent.indexOf("Mozilla/3") >= 0) && (bAgent.indexOf("Mac") >= 0))
 		return true; // dont follow link
 	else return false; // dont follow link
 }
 
 function CSButtonReturn () {
 	var bAgent = window.navigator.userAgent; 
 	var bAppName = window.navigator.appName;
 	if ((bAppName.indexOf("Explorer") >= 0) && (bAgent.indexOf("Mozilla/3") >= 0) && (bAgent.indexOf("Mac") >= 0))
 		return false; // follow link
 	else return true; // follow link
 }
 
 CSIm = new Object();
 function CSIShow(n,i) {
 	if (document.images) {
 		if (CSIm[n]) {
 			var img = (!IsIE()) ? CSFindElement(n,0) : document[n];
 			if (img && typeof(CSIm[n][i].src) != "undefined") {img.src = CSIm[n][i].src;}
 			if(i != 0)
 				self.status = CSIm[n][3];
 			else
 				self.status = " ";
 			return true;
 		}
 	}
 	return false;
 }
 function CSILoad(action) {
 	im = action[1];
 	if (document.images) {
 		CSIm[im] = new Object();
 		for (var i=2;i<5;i++) {
 			if (action[i] != '') { CSIm[im][i-2] = new Image(); CSIm[im][i-2].src = action[i]; }
 			else CSIm[im][i-2] = 0;
 		}
 		CSIm[im][3] = action[5];
 	}
 }
 CSStopExecution = false;
 function CSAction(array) { 
 	return CSAction2(CSAct, array);
 }
 function CSAction2(fct, array) { 
 	var result;
 	for (var i=0;i<array.length;i++) {
 		if(CSStopExecution) return false; 
 		var actArray = fct[array[i]];
 		if(actArray == null) return false; 
 		var tempArray = new Array;
 		for(var j=1;j<actArray.length;j++) {
 			if((actArray[j] != null) && (typeof(actArray[j]) == "object") && (actArray[j].length == 2)) {
 				if(actArray[j][0] == "VAR") {
 					tempArray[j] = CSStateArray[actArray[j][1]];
 				}
 				else {
 					if(actArray[j][0] == "ACT") {
 						tempArray[j] = CSAction(new Array(new String(actArray[j][1])));
 					}
 				else
 					tempArray[j] = actArray[j];
 				}
 			}
 			else
 				tempArray[j] = actArray[j];
 		}			
 		result = actArray[0](tempArray);
 	}
 	return result;
 }
 CSAct = new Object;
 
 
 
 CSLoopIsRunning = false; CSFctArray = new Array; CSTimeoutID = null;
 function CSLoop() {	
 	CSLoopIsRunning = false;
 	for (i=0;i<CSFctArray.length;i++) {
 		var curFct = CSFctArray[i];
 		if (curFct)	{
 			if (curFct.DoFunction(curFct)) { CSLoopIsRunning = true; curFct.counter++; }
 			else CSFctArray[i] = 0;
 		}
 	}
 	if (CSLoopIsRunning) CSTimeoutID = setTimeout("CSLoop()", 1);
 }
 function CSStartFunction(fct,data) {
 	if (!CSLoopIsRunning) { CSFctArray = 0; CSFctArray = new Array; }
 	var fctInfo = new Object;
 	fctInfo.DoFunction = fct; fctInfo.counter = 0; fctInfo.data = data;
 	CSFctArray[CSFctArray.length] = fctInfo; 
 	if (!CSLoopIsRunning) CSLoop();
 }
 function CSStopFunction(sceneName) {
 	var i;
 	for (i=0;i<CSFctArray.length;i++) {
 		var curFct = CSFctArray[i];
 		if (curFct){ if (curFct.data.name == sceneName){ CSFctArray[i] = 0; return; } }
 	}
 }
 function CSStopComplete() {
 	if (CSTimeoutID == null) return;
 	clearTimeout (CSTimeoutID); CSLoopIsRunning = false; CSTimeoutID = null;
 }
 
 function CSSetStyleVis(s,v) { if (IsIE()) CSIEStyl(s).visibility = (v == 0) ? "hidden" : "visible";
 	else CSNSStyl(s).visibility = (v == 0) ? 'hide' : 'show'; }
 function CSGetStyleVis(s) { if (IsIE()) return (CSIEStyl(s).visibility == "hidden") ? 0 : 1;
 	else return (CSNSStyl(s).visibility == 'hide') ? 0 : 1;}
 
 function CSGetLayerClip (el) {
 	if (el.isIE) return (new CSRect(0,0,el.offsetWidth,el.offsetHeight));
 	else return (new CSRect(el.clip.left,el.clip.top,el.clip.width,el.clip.height));
 }
 function CSSetLayerClip (el,clipRect) {
     var l,t,r,b;
     l=clipRect.left; t=clipRect.top; r=l+clipRect.width; b=t+clipRect.height;
     if(el.isIE) { el.style.clip = "rect("+ t + " " + r + " " + b + " " + l + ")"; }
     else {
 		el.clip.left=l; el.clip.top=t; 
 		el.clip.width=clipRect.width; el.clip.height=clipRect.height;
 	}
 	CSSetStyleVis(el.layer);
 }
 function CSRect (left,top,width,height) {
 this.left=left; this.top=top; this.width=width; this.height=height;
 }
 function CSCreateTransElement (layer, steps) {
 	var el;
 	if (IsIE()) el=document.all.tags("div")[layer];
 	else el=CSNSStyl(layer);
 	if (el==null) return null;
 	if (el.locked && (el.locked == true)) return null;
 	el.isIE=IsIE();
 	el.clipRect=CSGetLayerClip(el);
 	if (el.clipRect==null) return null;
 	el.maxValue=steps;
 	if (el.maxValue<=0) el.maxValue=30;
 	el.modus=""; el.layer=layer;
 	el.width=el.clipRect.width; el.height=el.clipRect.height;
 	el.locked = true;
 	return el;
 }
 function CSDisposeTransElement (el) { el.locked = false; }
 function CSStartWipe (action)
 {
 	var el=CSCreateTransElement (action[1], action[2]);
 	if (el==null) return;
 	var dir=action[3];
 	if (dir=="_inLeft") {el.steps=el.clipRect.width/el.maxValue; el.modus="in";}
 	else if (dir=="_inRight") {el.steps=el.clipRect.width/el.maxValue; el.modus="in";}
 	else if (dir=="_outLeft") {el.steps=el.clipRect.width/el.maxValue; el.modus="out";}
 	else if (dir=="_outRight") {el.steps=el.clipRect.width/el.maxValue; el.modus="out";}
 	else if (dir=="_inTop") {el.steps=el.clipRect.height/el.maxValue; el.modus="in";}
 	else if (dir=="_inBottom") {el.steps=el.clipRect.height/el.maxValue; el.modus="in";}
 	else if (dir=="_outTop") {el.steps=el.clipRect.height/el.maxValue; el.modus="out";}
 	else if (dir=="_outBottom") {el.steps=el.clipRect.height/el.maxValue; el.modus="out";}
 	else if (dir=="_inCenter") {el.HSteps=el.clipRect.width/el.maxValue; el.VSteps=el.clipRect.height/el.maxValue; el.modus="in";}
 	else if (dir=="_outCenter") {el.HSteps=el.clipRect.width/el.maxValue; el.VSteps=el.clipRect.height/el.maxValue; el.modus="out";}
 	if (el.modus=="") return;
 	el.currentValue=0;
 	el.glDir=action[3];
 	CSStartFunction(CSDoWipe,el);
 }
 function CSDoWipe (info)
 {
 	var el = info.data;
 	if (el==null) return false;
 	if (el.currentValue==el.maxValue) { CSFinishWipe(el); return false; }
 	var r = new CSRect(el.clipRect.left,el.clipRect.top,el.clipRect.width,el.clipRect.height);
 	var dir=el.glDir;
 	if (dir=="_inLeft") {r.left=r.width-el.currentValue*el.steps;}
 	else if (dir=="_inTop") {r.top=r.height-el.currentValue*el.steps;}
 	else if (dir=="_inRight") {r.width=el.currentValue*el.steps;}
 	else if (dir=="_inBottom") {r.height=el.currentValue*el.steps;}
 	else if (dir=="_outLeft") {r.width=r.width-el.currentValue*el.steps;}
 	else if (dir=="_outTop") {r.height=r.height-el.currentValue*el.steps;}
 	else if (dir=="_outRight") {r.left=el.currentValue*el.steps;}
 	else if (dir=="_outBottom") {r.top=el.currentValue*el.steps;}
 	else if (dir=="_inCenter") {r=CSCenterRectIn(el,r);}
 	else if (dir=="_outCenter") {r=CSCenterRectOut(el,r);}
 	CSSetLayerClip(el,r);
 	el.currentValue+=1;
 	return true;
 }
 function CSFinishWipe (el)
 {
 	if (el.modus=="in") CSSetLayerClip(el,el.clipRect);
 	else {
 		el.clipRect=new CSRect(0,0,el.width,el.height);
 		CSSetLayerClip(el,el.clipRect);
 		CSSetStyleVis(el.layer,0);
 	}
 	CSDisposeTransElement(el);
 }
 function CSCenterRectIn(el,r)
 {
 	var hValue= el.currentValue*el.HSteps/2;
 	var vValue= el.currentValue*el.VSteps/2;
 	r.left=Math.round(r.left+r.width/2-hValue);
 	r.top=Math.round(r.top+r.height/2-vValue);
 	r.width=Math.round(hValue*2);
 	r.height=Math.round(vValue*2);
 	return r;
 }
 function CSCenterRectOut(el,r)
 {
 	var hValue= el.currentValue*el.HSteps/2;
 	var vValue= el.currentValue*el.VSteps/2;
 	r.left+=Math.round(hValue);
 	r.top+=Math.round(vValue);
 	r.width-=Math.round(hValue*2);
 	r.height-=Math.round(vValue*2);
 	return r;
 }
 
 // -->
    </script>
   </csscriptdict>
   <csactiondict>
    <script>
     <!--
 CSInit[CSInit.length] = new Array(CSILoad,/*CMP*/'button',/*URL*/'knopf/seite1.gif',/*URL*/'knopf/seite2.gif',/*URL*/'','');
 CSAct[/*CMP*/ '3DBCD0'] = new Array(CSStartWipe,/*CMP*/ 'Ebene5',300,"_inBottom");
 
 // -->
    </script>
   </csactiondict>
   <csactions>
    <csaction class="Wipe Transition" name="3DBCD0" type="unbound" val0="Ebene5" val1="300" val2='"_inBottom"'>
    </csaction>
   </csactions>
  </head>
  <body alink="red" background="Bilder/hintergrung/samsel-r1.jpg" bgcolor="#120d77" link="#ff0033" onload="CSScriptInit();" vlink="#ff0013">
   <div id="Ebene2">
    <div align="center">
     <csobj h="30" ht="knopf/seite2.gif" t="Button" w="120">
      <a href="bobtail_bearded%20collie.html" onclick="return CSButtonReturn()" onmouseout="return CSIShow(/*CMP*/'button',0)" onmouseover="return CSIShow(/*CMP*/'button',1)">
       <img border="0" height="30" name="button" src="knopf/seite1.gif" width="120"/>
      </a>
     </csobj>
    </div>
   </div>
   <div id="Ebene1">
    <table border="0" cellpadding="0" cellspacing="2" width="543">
     <tr>
      <td>
       <div align="center">
        <h1>
         <font color="#2d45cc" size="4">
          Bobtail und Bearded Collie
          <br/>
          Hobbyzucht seit 1997
         </font>
        </h1>
       </div>
      </td>
     </tr>
    </table>
   </div>
   <div id="Ebene3">
   </div>
   <img src=" /tinc?key=8Y4x58oc"/>
   <p>
   </p>
   <div id="Ebene33">
    <table border="0" cellpadding="0" cellspacing="2" width="120">
     <tr>
      <td>
       <div align="center">
        <font color="#cccccc" size="-5">
         Bobtail und Bearded Collie Hobbyzucht,Beratung zum Kauf,Rasseinfo,Pflege,Vorstellung unserer Hunde,Bobtail und Bearded Collies . Angeschlossen an VDH und FCI.Für alle Hundeinteressierten und Welpenkäufer .
        </font>
       </div>
      </td>
     </tr>
    </table>
   </div>
   <div id="Ebene5">
    <div align="center">
     <table border="0" cellpadding="0" cellspacing="0" width="336">
      <tr>
       <td>
        <div align="center">
         <font color="#ccc53f" size="4">
          Herzlich willkommen
          <br/>
          bei
          <br/>
         </font>
         <b>
          <font color="#ccc53f" size="6">
           Dream of Paradise
          </font>
          <font color="#ccc53f" size="5">
           <br/>
          </font>
          <font color="#ccc53f" size="4">
           die Seite für
           <br/>
           Bobtail und Bearded Collie
          </font>
         </b>
         <p>
         </p>
        </div>
       </td>
      </tr>
     </table>
     <p>
      <csobj h="19" name="3DBCD0" t="ActionBox" w="36">
       <script>
        <!--
 CSAction(new Array(/*CMP*/ '3DBCD0'));
 
 // -->
       </script>
      </csobj>
     </p>
    </div>
   </div>
   <div id="Ebene4">
    <a href="impressum.html">
     Impressum
    </a>
   </div>
   <div id="Ebene6">
    <div align="center">
     <font color="#c1111e" face="Times New Roman,Georgia,Times" size="5">
      <b>
       <a href="bobtail%20bobtail%20welpe%20hund%20.html">
        Hurra wir wurden am 07.06.2016
        <br/>
        geboren
       </a>
      </b>
     </font>
    </div>
   </div>
  </body>
 </html>