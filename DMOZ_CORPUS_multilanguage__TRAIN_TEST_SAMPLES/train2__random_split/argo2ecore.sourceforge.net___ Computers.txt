<html>
  <body>
   <table width="100%">
    <tr>
     <td align="left" valign="top">
      <h2>
       Argo2Ecore
      </h2>
     </td>
     <td align="right">
      <a href="http://sourceforge.net/projects/argo2ecore">
       <img alt="SourceForge.net Logo" border="0" height="31" src="http://sourceforge.net/sflogo.php?group_id=80712&amp;type=1" width="88"/>
      </a>
     </td>
    </tr>
   </table>
   Argo2Ecore converts UML models created with ArgoUML (
   <a href="http://www.argouml.org">
    www.argouml.org
   </a>
   ) 
 to the
 Eclipse UML dialect Ecore (see
   <a href="http://www.eclipse.org/emf">
    www.eclipse.org/emf
   </a>
   ). 
 It allows users to create
 graphical UML models using ArgoUML and then use the EMF codegenerator to
 generate java code. IMHO ArgoUML is by far the best open source UML modelling tool and
 much better than some commercial alternatives including omondo's eclipseuml.
   <h3>
    New in version 3.0.0
   </h3>
   <ul>
    <li>
     adapt to Eclipse 3.3 (Europa)
    </li>
    <li>
     fix bug 1611132: Changeability for attributes not transferred to ecore (patch by buschp)
    </li>
    <li>
     fix bug 1340891: generate ecore annotation for constraints (patch by jfrain2005)
    </li>
    <li>
     add support for EMF "unsettable" attribute (by jfrain2005)
    </li>
    <li>
     add support for default attribute values (by jfrain2005)
    </li>
    <li>
     add support for UML enumerations (by jfrain2005)
    </li>
   </ul>
   <h3>
    New in version 2.1.0
   </h3>
   <ul>
    <li>
     Version 2.1 is an update, built with Eclipse 3.1, EMF 2.1 and ArgoUML 0.20. 
   There are no functional changes but it operates on xmi files instead of zargo files, i.e. 
   in ArgoUML the model must be exported to XMI. The internal XMI parser
     <a href="http://nsuml.sourceforge.net/">
      NSUML
     </a>
     has been
   replaced with
     <a href="http://mdr.netbeans.org/">
      MDR
     </a>
     .
    </li>
   </ul>
   <h3>
    New in version 2.0.0
   </h3>
   <ul>
    <li>
     Version 2 is an update, built with Eclipse 3.0M8, EMF 2.0 and ArgoUML 0.15.5. 
   There are no functional changes.
    </li>
   </ul>
   <h3>
    New in version 1.4.1
   </h3>
   <ul>
    <li>
     Sorts the classes by name, so the editor plugin menus are much cleaner
    </li>
   </ul>
   <h3>
    New in version 1.4
   </h3>
   <ul>
    <li>
     Generates an EDataType for all references to classes from
     <tt>
      java.*
     </tt>
     and
     <tt>
      javax.*
     </tt>
     packages
    </li>
    <li>
     a class with stereotype &lt;&lt;interface&gt;&gt; is treated as an interface, i.e. it will create an EClass with isInterface() == true
    </li>
    <li>
     bugfix with multiple inheritance. Now the generated class
     <tt>
      extends
     </tt>
     the first superclass whose isInterface() == false and
     <tt>
      implements
     </tt>
     all other superclasses
    </li>
   </ul>
   <h3>
    New in version 1.3
   </h3>
   <ul>
    <li>
     downgraded to argouml version 0.14.1 (0.15 disappeared from tigris.org)
    </li>
    <li>
     Added several checks for error conditions like duplicate names or invalid types. 
       Now it should be fairly difficult to produce an invalid *.ecore with ArgoUML.
    </li>
   </ul>
   <h3>
    New in version 1.2
   </h3>
   <ul>
    <li>
     upgraded to argouml version 0.15.1
    </li>
   </ul>
   <h3>
    New in version 1.1
   </h3>
   <ul>
    <li>
     added Support for Enumerations. These are modelled as classes with the
    &lt;&lt;enumeration&gt;&gt; stereotype. Its attributes become the EEnumLiterals
    of Ecore.
    </li>
    <li>
     added Support for Operations
    </li>
   </ul>
   <h3>
    Example
   </h3>
   The ArgoUML model
   <a href="test.zargo">
    test.zargo
   </a>
   (
   <a href="test.zargo">
    test.xmi
   </a>
   ) and the generated
   <a href="test.ecore">
    test.ecore
   </a>
   model contains the following model:
   <p>
    <img src="test.gif"/>
   </p>
   <h3>
    How to use
   </h3>
   Argo2Ecore was tested with ArgoUML-0.20 and EMF-2.1.
 It may or may not work with other versions.
   <p>
   </p>
   To convert
 an Argo model, export to XMI in ArgoUML, right click on the *.xmi file in the Eclipse
 package explorer. In the pop up menu choose
   <i>
    Convert to Ecore
   </i>
   .
   <p>
   </p>
   <img src="right-click.png"/>
   <p>
   </p>
   This will create the ecore model.
   <h3>
    Known issues
   </h3>
   <ul>
    <li>
     Its easy in ArgoUML to remove objects (e.g. associations) from 
     the diagram but leave them in the model. In this case Argo2Ecore will still
     convert the invisible model objects. This may result in
     strange behaviour, if the diagram looks right but the invisible
     model objects generate a "wrong" ecore model
    </li>
    <li>
     You may get an
     <i>
      Java.lang.IllegalArgumentException: 
      The classifier(s) "MyDataType" must be moved from model to package scope.
     </i>
     The ArgoUML model itself is not mapped to an ecore package, so
      if the ArgoUML model "mymodel" contains a package "mypackage" the resulting ecore
      package will be "mypackage" and not "mymodel.mypackage".
      Therefore ModelElements that are owned by the model itself will not be
      translated to ecore. ArgoUML places DataTypes (predefined like "int"
      as well as user defined) into the model namespace by default. 
      Make sure to move these into a packagage.
    </li>
   </ul>
   <h3>
    Supported Tagged Values
   </h3>
   <ul>
    <li>
     volatile=true/false - the ecore volatile attribute of attributes and references
    </li>
    <li>
     transient=true/false - ecore transient attribute of attributes and references
    </li>
    <li>
     instance=classname - instance class name of EDataType
    </li>
    <li>
     serializable=true/false - serializable attr of EDataType
    </li>
   </ul>
   <hr/>
   Enjoy,
   <br/>
   Andreas
  </body>
 </html>
